{"version":3,"sources":["common.styled.js","views/LoginView/LoginView.module.css","views/LoginView/LoginView.js"],"names":["styleTextShadow","textShadow","NavLinkStyled","styled","NavLink","props","fontSize","s","m","p","d","Button","button","margin","textShadowColor","Input","input","Label","label","FormIcon","module","exports","LoginView","dispatch","useDispatch","isLoading","useSelector","getUserIsLoggedIn","isError","getAuthError","useState","email","setEmail","password","setPassword","emailInputId","uuidv4","passwordInputId","paramState","handleChange","e","target","name","value","className","css","form","onSubmit","preventDefault","trim","toast","error","data","logIn","then","response","console","log","htmlFor","thumb_input","size","id","type","pattern","required","onChange","disabled","loading","color"],"mappings":"oYAGaA,EAAkB,CAC7BC,WACE,6JAESC,EAAgBC,YAAOC,IAAPD,CAAH,u1BAKX,SAACE,GAAD,gBAAcA,EAAMC,SAASC,EAA7B,SAYI,SAACF,GAAD,gBAAcA,EAAMC,SAASE,EAA7B,SAMA,SAACH,GAAD,gBAAcA,EAAMC,SAASG,EAA7B,SAMA,SAACJ,GAAD,gBAAcA,EAAMC,SAASI,EAA7B,SAMNC,EAASR,IAAOS,OAAV,23CAwBP,SAACP,GAAD,cAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAOQ,UAaD,SAACR,GAAD,OAAWA,EAAMS,mBAC3B,SAACT,GAAD,OAAWA,EAAMS,mBACjB,SAACT,GAAD,OAAWA,EAAMS,mBAChB,SAACT,GAAD,OAAWA,EAAMS,mBAQxBC,EAAQZ,IAAOa,MAAV,mWAgBLC,EAAQd,IAAOe,MAAV,wOAYLC,EAAWhB,IAAOe,MAAV,sa,oBCrHrBE,EAAOC,QAAU,CAAC,KAAO,wBAAwB,YAAc,iC,0MCWhD,SAASC,IACtB,IAAMC,EAAWC,cACXC,EAAYC,YAAYC,KACxBC,EAAUF,YAAYG,KAC5B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAeC,cACfC,EAAkBD,cAClBE,EAAa,CAAEP,MAAOC,EAAUC,SAAUC,GAE1CK,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAOL,EAAWI,GAAMC,IAmB1B,OACE,uBAAMC,UAAWC,IAAIC,KAAMC,SAjBR,SAACP,GAEpB,GADAA,EAAEQ,kBACGpB,IAA6B,KAAjBG,EAAMkB,QAAqC,KAApBhB,EAASgB,QAC/C,OAAOC,IAAMC,MAAM,2CAGrB,IAAMC,EAAO7B,EAAS8B,YAAM,CAAEtB,QAAOE,cAAaqB,MAChD,SAAAC,GACMA,EAASJ,OACXD,IAAMC,MAAM,+BAIhBK,QAAQC,IAAIL,IAId,UACE,eAAC,IAAD,CAAOM,QAASvB,EAAhB,kBAEE,sBAAKS,UAAWC,IAAIc,YAApB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAyBC,KAAM,OAEjC,cAAC,IAAD,CACEC,GAAI1B,EACJ2B,KAAK,QACLpB,KAAK,QACLqB,QAAQ,mDACRC,UAAQ,EACRC,SAAU1B,EACVI,MAAOZ,UAKb,eAAC,IAAD,CAAO2B,QAASrB,EAAhB,qBAEE,sBAAKO,UAAWC,IAAIc,YAApB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAoBC,KAAM,OAE5B,cAAC,IAAD,CACEC,GAAIxB,EACJyB,KAAK,WACLpB,KAAK,WACLsB,UAAQ,EACRC,SAAU1B,EACVI,MAAOV,UAIb,eAAC,IAAD,CACEnB,gBAAiB,qBACjBD,OAAQ,SACRiD,KAAK,SACLI,SAAUzC,EAJZ,UAME,cAAC,IAAD,CAAY0C,QAAS1C,EAAWmC,KAAM,GAAIQ,MAAO,UANnD","file":"static/js/login-view.ce818b0f.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const styleTextShadow = {\n  textShadow:\n    \"1px 1px 0 var(--accent-color-orange), 1px -1px 0 var(--accent-color-orange), -1px 1px 0 var(--accent-color-orange),-1px -1px 0 var(--accent-color-orange)\",\n};\nexport const NavLinkStyled = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  padding: 2px;\n  font-weight: 700;\n  font-size: ${(props) => `${props.fontSize.s}px`};\n  text-shadow: 1px 1px 0 var(--color-gray), 1px -1px 0 var(--color-gray),\n    -1px 1px 0 var(--color-gray), -1px -1px 0 var(--color-gray);\n  color: var(--accent-color-black07);\n  transition: all var(--animation-duration) var(--timing-function);\n  &:hover,\n  &:focus {\n    text-shadow: 1px 1px 0 var(--color-white), 1px -1px 0 var(--color-white),\n      -1px 1px 0 var(--color-white), -1px -1px 0 var(--color-white);\n  }\n  @media (min-width: 420px) {\n    & {\n      font-size: ${(props) => `${props.fontSize.m}px`};\n      padding: 4px;\n    }\n  }\n  @media (min-width: 768px) {\n    & {\n      font-size: ${(props) => `${props.fontSize.p}px`};\n      padding: 9px;\n    }\n  }\n  @media (min-width: 1200px) {\n    & {\n      font-size: ${(props) => `${props.fontSize.d}px`};\n      padding: 12px;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  box-sizing: border-box;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: transparent;\n  border: 2px solid var(--accent-color-orange);\n  border-radius: 0.6em;\n  text-shadow: 1px 1px 0 var(--color-gray08), 1px -1px 0 var(--color-gray08),\n    -1px 1px 0 var(--color-gray08), -1px -1px 0 var(--color-gray08);\n  border-color: var(--accent-color-orange);\n  box-shadow: 0 0 40px 40px var(--accent-color-orange) inset,\n    0 0 0 0 var(--accent-color-orange);\n  -webkit-transition: all var(--animation-duration) ease-in-out;\n  transition: all var(--animation-duration) var(--timing-function);\n  cursor: pointer;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-align-self: center;\n  -ms-flex-item-align: center;\n  align-self: center;\n  font-size: 15px;\n  margin: ${(props) => props?.margin};\n  line-height: 1;\n  padding: 5px 12px;\n  text-decoration: none;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    outline: 0;\n    box-shadow: 0 0 10px 0 var(--accent-color-orange) inset,\n      0 0 10px 4px var(--accent-color-orange);\n    text-shadow: 1px 1px 0 ${(props) => props.textShadowColor},\n      1px -1px 0 ${(props) => props.textShadowColor},\n      -1px 1px 0 ${(props) => props.textShadowColor},\n      -1px -1px 0 ${(props) => props.textShadowColor};\n  }\n  @media screen and (max-width: 785px) {\n    padding: 2px 6px;\n    font-size: 12px;\n  }\n`;\n\nexport const Input = styled.input`\n  margin: 10px 0;\n  padding: 4px 10px;\n  width: 100%;\n  height: 28px;\n  border-top-right-radius: 3px;\n  border-bottom-right-radius: 3px;\n  border: 1px solid var(--color-input-border);\n  border-left: none;\n  background-color: var(--color-gray);\n  &:hover,\n  &:focus {\n    background-color: var(--color-gray08);\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: var(--color-gray);\n  font-weight: 700;\n  &:hover,\n  &:focus {\n    text-shadow: var(--text-shadow);\n    color: var(--accent-color-black07);\n  }\n`;\n\nexport const FormIcon = styled.label`\n  padding: 0;\n  border-top-left-radius: 3px;\n  border-bottom-left-radius: 3px;\n  background-color: var(--color-input-border);\n  width: 30px;\n  height: 28px;\n  color: var(--accent-color-orange);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color-orange);\n    color: var(--accent-color-black07);\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__1WifF\",\"thumb_input\":\"LoginView_thumb_input__1SpC4\"};","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport toast from \"react-hot-toast\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MdOutlineAlternateEmail } from \"react-icons/md\";\nimport { RiLockPasswordFill } from \"react-icons/ri\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport { logIn, getUserIsLoggedIn, getAuthError } from \"../../redux/auth\";\nimport { Button, Input, Label, FormIcon } from \"../../common.styled\";\nimport css from \"./LoginView.module.css\";\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getUserIsLoggedIn);\n  const isError = useSelector(getAuthError);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const emailInputId = uuidv4();\n  const passwordInputId = uuidv4();\n  const paramState = { email: setEmail, password: setPassword };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    return paramState[name](value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!isError && (email.trim() === \"\" || password.trim() === \"\")) {\n      return toast.error(\"ðŸ’© Please fill in all fields!\");\n    }\n\n    const data = dispatch(logIn({ email, password })).then(\n      response => {\n        if (response.error) {\n          toast.error(\"Wrong login or password!\");\n        }\n      }\n    );\n      console.log(data);\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <Label htmlFor={emailInputId}>\n        Email\n        <div className={css.thumb_input}>\n          <FormIcon>\n            <MdOutlineAlternateEmail size={16} />\n          </FormIcon>\n          <Input\n            id={emailInputId}\n            type=\"email\"\n            name=\"email\"\n            pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n            required\n            onChange={handleChange}\n            value={email}\n          />\n        </div>\n      </Label>\n\n      <Label htmlFor={passwordInputId}>\n        Password\n        <div className={css.thumb_input}>\n          <FormIcon>\n            <RiLockPasswordFill size={16} />\n          </FormIcon>\n          <Input\n            id={passwordInputId}\n            type=\"password\"\n            name=\"password\"\n            required\n            onChange={handleChange}\n            value={password}\n          />\n        </div>\n      </Label>\n      <Button\n        textShadowColor={\"var(--color-white)\"}\n        margin={\"10px 0\"}\n        type=\"submit\"\n        disabled={isLoading}\n      >\n        <ClipLoader loading={isLoading} size={12} color={\"white\"} /> {`Log In`}\n      </Button>\n    </form>\n  );\n}\n"],"sourceRoot":""}