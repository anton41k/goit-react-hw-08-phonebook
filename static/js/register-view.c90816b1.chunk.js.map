{"version":3,"sources":["common.styled.js","views/RegisterView/RegisterView.module.css","views/RegisterView/RegisterView.js"],"names":["styleTextShadow","textShadow","NavLinkStyled","styled","NavLink","props","fontSize","s","m","p","d","Button","button","margin","textShadowColor","Input","input","Label","label","FormIcon","module","exports","RegisterView","dispatch","useDispatch","isLoading","useSelector","getUserIsLoggedIn","isError","getAuthError","useState","name","setName","email","setEmail","password","setPassword","nameInputId","uuidv4","emailInputId","passwordInputId","paramState","handleChange","e","target","value","className","css","form","onSubmit","preventDefault","trim","toast","error","length","console","log","signUp","htmlFor","thumb_input","size","id","type","pattern","title","required","onChange","disabled","loading","color"],"mappings":"oYAGaA,EAAkB,CAC7BC,WACE,6JAESC,EAAgBC,YAAOC,IAAPD,CAAH,u1BAKX,SAACE,GAAD,gBAAcA,EAAMC,SAASC,EAA7B,SAYI,SAACF,GAAD,gBAAcA,EAAMC,SAASE,EAA7B,SAMA,SAACH,GAAD,gBAAcA,EAAMC,SAASG,EAA7B,SAMA,SAACJ,GAAD,gBAAcA,EAAMC,SAASI,EAA7B,SAMNC,EAASR,IAAOS,OAAV,23CAwBP,SAACP,GAAD,cAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAOQ,UAaD,SAACR,GAAD,OAAWA,EAAMS,mBAC3B,SAACT,GAAD,OAAWA,EAAMS,mBACjB,SAACT,GAAD,OAAWA,EAAMS,mBAChB,SAACT,GAAD,OAAWA,EAAMS,mBAQxBC,EAAQZ,IAAOa,MAAV,mWAgBLC,EAAQd,IAAOe,MAAV,wOAYLC,EAAWhB,IAAOe,MAAV,sa,oBCrHrBE,EAAOC,QAAU,CAAC,KAAO,2BAA2B,YAAc,oC,mNCYnD,SAASC,IACtB,IAAMC,EAAWC,cACXC,EAAYC,YAAYC,KACxBC,EAAUF,YAAYG,KAC5B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAcC,cACdC,EAAeD,cACfE,EAAkBF,cAElBG,EAAa,CAAEV,KAAMC,EAASC,MAAOC,EAAUC,SAAUC,GAEzDM,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MACd,OAAOJ,EAAWV,GAAMc,IAmB1B,OACE,uBAAMC,UAAWC,IAAIC,KAAMC,SAjBR,SAACN,GAGpB,OAFAA,EAAEO,iBAEkB,KAAhBnB,EAAKoB,QAAkC,KAAjBlB,EAAMkB,QAAqC,KAApBhB,EAASgB,OACjDC,IAAMC,MAAM,2CACVlB,EAASmB,OAAS,GAC3BC,QAAQC,IAAIrB,EAASmB,QACdF,IAAMC,MAAM,mDAGrB9B,EAASkC,YAAO,CAAE1B,OAAME,QAAOE,mBAC3BP,GACFwB,IAAMC,MAAM,qDAKd,UACE,eAAC,IAAD,CAAOK,QAASrB,EAAhB,iBAEE,sBAAKS,UAAWC,IAAIY,YAApB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,KAAM,OAEhB,cAAC,IAAD,CACEC,GAAIxB,EACJyB,KAAK,OACL/B,KAAK,OACLgC,QAAQ,yHACRC,MAAM,0KACNC,UAAQ,EACRC,SAAUxB,EACVG,MAAOd,UAIb,eAAC,IAAD,CAAO2B,QAASnB,EAAhB,kBAEE,sBAAKO,UAAWC,IAAIY,YAApB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAyBC,KAAM,OAEjC,cAAC,IAAD,CACEC,GAAItB,EACJuB,KAAK,QACL/B,KAAK,QACLgC,QAAQ,mDACRE,UAAQ,EACRC,SAAUxB,EACVG,MAAOZ,UAKb,eAAC,IAAD,CAAOyB,QAASlB,EAAhB,qBAEE,sBAAKM,UAAWC,IAAIY,YAApB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAoBC,KAAM,OAE5B,cAAC,IAAD,CACEC,GAAIrB,EACJsB,KAAK,WACL/B,KAAK,WACLkC,UAAQ,EACRC,SAAUxB,EACVG,MAAOV,UAIb,eAAC,IAAD,CACErB,gBAAiB,qBACjBD,OAAQ,SACRiD,KAAK,SACLK,SAAU1C,EAJZ,UAME,cAAC,IAAD,CAAY2C,QAAS3C,EAAWmC,KAAM,GAAIS,MAAO,UANnD","file":"static/js/register-view.c90816b1.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const styleTextShadow = {\n  textShadow:\n    \"1px 1px 0 var(--accent-color-orange), 1px -1px 0 var(--accent-color-orange), -1px 1px 0 var(--accent-color-orange),-1px -1px 0 var(--accent-color-orange)\",\n};\nexport const NavLinkStyled = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  padding: 2px;\n  font-weight: 700;\n  font-size: ${(props) => `${props.fontSize.s}px`};\n  text-shadow: 1px 1px 0 var(--color-gray), 1px -1px 0 var(--color-gray),\n    -1px 1px 0 var(--color-gray), -1px -1px 0 var(--color-gray);\n  color: var(--accent-color-black07);\n  transition: all var(--animation-duration) var(--timing-function);\n  &:hover,\n  &:focus {\n    text-shadow: 1px 1px 0 var(--color-white), 1px -1px 0 var(--color-white),\n      -1px 1px 0 var(--color-white), -1px -1px 0 var(--color-white);\n  }\n  @media (min-width: 420px) {\n    & {\n      font-size: ${(props) => `${props.fontSize.m}px`};\n      padding: 4px;\n    }\n  }\n  @media (min-width: 768px) {\n    & {\n      font-size: ${(props) => `${props.fontSize.p}px`};\n      padding: 9px;\n    }\n  }\n  @media (min-width: 1200px) {\n    & {\n      font-size: ${(props) => `${props.fontSize.d}px`};\n      padding: 12px;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  box-sizing: border-box;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: transparent;\n  border: 2px solid var(--accent-color-orange);\n  border-radius: 0.6em;\n  text-shadow: 1px 1px 0 var(--color-gray08), 1px -1px 0 var(--color-gray08),\n    -1px 1px 0 var(--color-gray08), -1px -1px 0 var(--color-gray08);\n  border-color: var(--accent-color-orange);\n  box-shadow: 0 0 40px 40px var(--accent-color-orange) inset,\n    0 0 0 0 var(--accent-color-orange);\n  -webkit-transition: all var(--animation-duration) ease-in-out;\n  transition: all var(--animation-duration) var(--timing-function);\n  cursor: pointer;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-align-self: center;\n  -ms-flex-item-align: center;\n  align-self: center;\n  font-size: 15px;\n  margin: ${(props) => props?.margin};\n  line-height: 1;\n  padding: 5px 12px;\n  text-decoration: none;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    outline: 0;\n    box-shadow: 0 0 10px 0 var(--accent-color-orange) inset,\n      0 0 10px 4px var(--accent-color-orange);\n    text-shadow: 1px 1px 0 ${(props) => props.textShadowColor},\n      1px -1px 0 ${(props) => props.textShadowColor},\n      -1px 1px 0 ${(props) => props.textShadowColor},\n      -1px -1px 0 ${(props) => props.textShadowColor};\n  }\n  @media screen and (max-width: 785px) {\n    padding: 2px 6px;\n    font-size: 12px;\n  }\n`;\n\nexport const Input = styled.input`\n  margin: 10px 0;\n  padding: 4px 10px;\n  width: 100%;\n  height: 28px;\n  border-top-right-radius: 3px;\n  border-bottom-right-radius: 3px;\n  border: 1px solid var(--color-input-border);\n  border-left: none;\n  background-color: var(--color-gray);\n  &:hover,\n  &:focus {\n    background-color: var(--color-gray08);\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: var(--color-gray);\n  font-weight: 700;\n  &:hover,\n  &:focus {\n    text-shadow: var(--text-shadow);\n    color: var(--accent-color-black07);\n  }\n`;\n\nexport const FormIcon = styled.label`\n  padding: 0;\n  border-top-left-radius: 3px;\n  border-bottom-left-radius: 3px;\n  background-color: var(--color-input-border);\n  width: 30px;\n  height: 28px;\n  color: var(--accent-color-orange);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color-orange);\n    color: var(--accent-color-black07);\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__-s2Sh\",\"thumb_input\":\"RegisterView_thumb_input__18ZPd\"};","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getUserIsLoggedIn, signUp, getAuthError } from \"../../redux/auth\";\nimport toast from \"react-hot-toast\";\nimport { MdOutlineAlternateEmail } from \"react-icons/md\";\nimport { RiLockPasswordFill } from \"react-icons/ri\";\nimport { FaUser } from \"react-icons/fa\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport { Button, Input, Label, FormIcon } from \"../../common.styled\";\nimport css from \"./RegisterView.module.css\";\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getUserIsLoggedIn);\n  const isError = useSelector(getAuthError);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const nameInputId = uuidv4();\n  const emailInputId = uuidv4();\n  const passwordInputId = uuidv4();\n\n  const paramState = { name: setName, email: setEmail, password: setPassword };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    return paramState[name](value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (name.trim() === \"\" || email.trim() === \"\" || password.trim() === \"\") {\n      return toast.error(\"💩 Please fill in all fields!\");\n    } else if (password.length < 7) {\n      console.log(password.length);\n      return toast.error(\"Passwords must be at least 7 characters long!\");\n    }\n\n    dispatch(signUp({ name, email, password }));\n    if (isError) {\n      toast.error(\"User with this email has already been created!\");\n    }\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <Label htmlFor={nameInputId}>\n        Name\n        <div className={css.thumb_input}>\n          <FormIcon>\n            <FaUser size={16} />\n          </FormIcon>\n          <Input\n            id={nameInputId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n            value={name}\n          />\n        </div>\n      </Label>\n      <Label htmlFor={emailInputId}>\n        Email\n        <div className={css.thumb_input}>\n          <FormIcon>\n            <MdOutlineAlternateEmail size={16} />\n          </FormIcon>\n          <Input\n            id={emailInputId}\n            type=\"email\"\n            name=\"email\"\n            pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n            required\n            onChange={handleChange}\n            value={email}\n          />\n        </div>\n      </Label>\n\n      <Label htmlFor={passwordInputId}>\n        Password\n        <div className={css.thumb_input}>\n          <FormIcon>\n            <RiLockPasswordFill size={16} />\n          </FormIcon>\n          <Input\n            id={passwordInputId}\n            type=\"password\"\n            name=\"password\"\n            required\n            onChange={handleChange}\n            value={password}\n          />\n        </div>\n      </Label>\n      <Button\n        textShadowColor={\"var(--color-white)\"}\n        margin={\"10px 0\"}\n        type=\"submit\"\n        disabled={isLoading}\n      >\n        <ClipLoader loading={isLoading} size={12} color={\"white\"} /> {`sign up`}\n      </Button>\n    </form>\n  );\n}\n"],"sourceRoot":""}