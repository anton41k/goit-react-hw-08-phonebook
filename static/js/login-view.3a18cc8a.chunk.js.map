{"version":3,"sources":["common.styled.js","views/LoginView/LoginView.module.css","views/LoginView/LoginView.js"],"names":["styleTextShadow","textShadow","NavLinkStyled","styled","NavLink","props","fontSize","s","m","p","d","Button","button","margin","textShadowColor","Input","input","Label","label","FormIcon","module","exports","LoginView","dispatch","useDispatch","isLoading","useSelector","getUserIsLoggedIn","isError","getAuthError","useState","email","setEmail","password","setPassword","emailInputId","uuidv4","passwordInputId","paramState","handleChange","e","target","name","value","className","css","form","onSubmit","preventDefault","trim","toast","error","logIn","htmlFor","thumb_input","size","id","type","pattern","required","onChange","disabled","loading","color"],"mappings":"oYAGaA,EAAkB,CAC/BC,WAAY,6JACCC,EAAgBC,YAAOC,IAAPD,CAAH,45BAKT,SAAAE,GAAK,gBAAOA,EAAMC,SAASC,EAAtB,SAYG,SAAAF,GAAK,gBAAOA,EAAMC,SAASE,EAAtB,SAML,SAAAH,GAAK,gBAAOA,EAAMC,SAASG,EAAtB,SAML,SAAAJ,GAAK,gBAAOA,EAAMC,SAASI,EAAtB,SAMjBC,EAASR,IAAOS,OAAV,k/CA4BN,SAAAP,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOQ,UAYI,SAAAR,GAAK,OAAIA,EAAMS,mBAA+B,SAAAT,GAAK,OAAIA,EAAMS,mBAC/E,SAAAT,GAAK,OAAIA,EAAMS,mBAAgC,SAAAT,GAAK,OAAIA,EAAMS,mBAQhEC,EAAQZ,IAAOa,MAAV,8XAgBLC,EAAQd,IAAOe,MAAV,6PAYLC,EAAWhB,IAAOe,MAAV,uc,oBCpHrBE,EAAOC,QAAU,CAAC,KAAO,wBAAwB,YAAc,iC,0MCWhD,SAASC,IACtB,IAAMC,EAAWC,cACXC,EAAYC,YAAYC,KACxBC,EAAUF,YAAYG,KAC5B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAeC,cACfC,EAAkBD,cAClBE,EAAa,CAAE,MAASN,EAAU,SAAYE,GAE9CK,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAOL,EAAWI,GAAMC,IAe1B,OACE,uBAAMC,UAAWC,IAAIC,KAAMC,SAbR,SAAAP,GAEnB,GADAA,EAAEQ,kBACIpB,IAA6B,KAAjBG,EAAMkB,QAAqC,KAApBhB,EAASgB,QAChD,OAAOC,IAAMC,MAAM,2CAGrB5B,EAAS6B,YAAM,CAAErB,QAAOE,cACpBL,GACFsB,IAAMC,MAAM,6BAKd,UACE,eAAC,IAAD,CAAOE,QAASlB,EAAhB,kBAEE,sBAAKS,UAAWC,IAAIS,YAApB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAyBC,KAAM,OAEjC,cAAC,IAAD,CACEC,GAAIrB,EACJsB,KAAK,QACLf,KAAK,QACLgB,QAAQ,mDACRC,UAAQ,EACRC,SAAUrB,EACVI,MAAOZ,UAKb,eAAC,IAAD,CAAOsB,QAAShB,EAAhB,qBAEE,sBAAKO,UAAWC,IAAIS,YAApB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAoBC,KAAM,OAE5B,cAAC,IAAD,CACEC,GAAInB,EACJoB,KAAK,WACLf,KAAK,WACLiB,UAAQ,EACRC,SAAUrB,EACVI,MAAOV,UAIb,eAAC,IAAD,CAAQnB,gBAAiB,qBAAsBD,OAAQ,SACrD4C,KAAK,SACLI,SAAUpC,EAFZ,UAGI,cAAC,IAAD,CAAYqC,QAASrC,EAAW8B,KAAM,GAAIQ,MAAO,UAHrD","file":"static/js/login-view.3a18cc8a.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const styleTextShadow = {\r\ntextShadow: '1px 1px 0 var(--accent-color-orange), 1px -1px 0 var(--accent-color-orange), -1px 1px 0 var(--accent-color-orange),-1px -1px 0 var(--accent-color-orange)'}\r\nexport const NavLinkStyled = styled(NavLink)`\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    padding: 2px;\r\n    font-weight: 700;\r\n    font-size: ${props => `${props.fontSize.s}px`};\r\n    text-shadow: 1px 1px 0 var(--color-gray), 1px -1px 0 var(--color-gray), -1px 1px 0 var(--color-gray),\r\n  -1px -1px 0 var(--color-gray);\r\n    color: var(--accent-color-black07);\r\n    transition: all var(--animation-duration);\r\n    &:hover,\r\n    &:focus {\r\n        text-shadow: 1px 1px 0 var(--color-white), 1px -1px 0 var(--color-white),\r\n  -1px 1px 0 var(--color-white), -1px -1px 0 var(--color-white);\r\n    }\r\n    @media (min-width: 420px) {\r\n        & {\r\n            font-size: ${props => `${props.fontSize.m}px`};\r\n            padding: 4px;\r\n        }\r\n    }\r\n    @media (min-width: 768px) {\r\n        & {\r\n            font-size: ${props => `${props.fontSize.p}px`};\r\n            padding: 9px;\r\n        }\r\n    }\r\n    @media (min-width: 1200px) {\r\n        & {\r\n            font-size: ${props => `${props.fontSize.d}px`};\r\n            padding: 12px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    box-sizing: border-box;\r\n    -webkit-appearance: none;\r\n        -moz-appearance: none;\r\n            appearance: none;\r\n    background-color: transparent;\r\n    border: 2px solid var(--accent-color-orange);\r\n    border-radius: 0.6em;\r\n    text-shadow:\r\n        1px 1px 0 var(--color-gray08),\r\n        1px -1px 0 var(--color-gray08),\r\n        -1px 1px 0 var(--color-gray08),\r\n        -1px -1px 0 var(--color-gray08);\r\n    border-color: var(--accent-color-orange);\r\n    box-shadow:\r\n        0 0 40px 40px var(--accent-color-orange) inset,\r\n        0 0 0 0 var(--accent-color-orange);\r\n    -webkit-transition: all var(--animation-duration) ease-in-out;\r\n    transition: all var(--animation-duration) var(--timing-function);\r\n    cursor: pointer;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-align-self: center;\r\n        -ms-flex-item-align: center;\r\n            align-self: center;\r\n    font-size: 15px;\r\n    margin:${props => props?.margin};\r\n    line-height: 1;\r\n    padding: 5px 12px;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    \r\n    &:hover,\r\n    &:focus {\r\n        outline: 0;\r\n        box-shadow: 0 0 10px 0 var(--accent-color-orange) inset, 0 0 10px 4px var(--accent-color-orange);\r\n        text-shadow: 1px 1px 0 ${props => props.textShadowColor}, 1px -1px 0 ${props => props.textShadowColor},\r\n  -1px 1px 0 ${props => props.textShadowColor}, -1px -1px 0 ${props => props.textShadowColor};\r\n    }\r\n    @media screen and (max-width: 785px){\r\n    padding: 2px 6px;\r\n    font-size: 12px;\r\n}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    margin: 10px 0;\r\n    padding: 4px 10px;\r\n    width: 100%;\r\n    height: 28px;\r\n    border-top-right-radius: 3px;\r\n    border-bottom-right-radius: 3px;\r\n    border: 1px solid var(--color-input-border);\r\n    border-left: none;\r\n    background-color: var(--color-gray);\r\n    &:hover,\r\n    &:focus{\r\n        background-color: var(--color-gray08);\r\n    }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: var(--color-gray);\r\n    font-weight: 700;\r\n    &:hover,\r\n    &:focus{\r\n        text-shadow: var(--text-shadow);\r\n        color: var(--accent-color-black07);\r\n    }\r\n`;\r\n\r\nexport const FormIcon = styled.label`\r\n    padding: 0;\r\n    border-top-left-radius: 3px;\r\n    border-bottom-left-radius: 3px;\r\n    background-color: var(--color-input-border);\r\n    width: 30px;\r\n    height: 28px;\r\n    color: var(--accent-color-orange);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    &:hover,\r\n    &:focus{\r\n        background-color: var(--accent-color-orange);\r\n        color: var(--accent-color-black07);\r\n    }\r\n`;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__1WifF\",\"thumb_input\":\"LoginView_thumb_input__1SpC4\"};","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport  toast  from 'react-hot-toast';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { MdOutlineAlternateEmail } from 'react-icons/md';\r\nimport { RiLockPasswordFill } from 'react-icons/ri';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nimport { logIn, getUserIsLoggedIn, getAuthError } from '../../redux/auth';\r\nimport { Button, Input, Label, FormIcon } from '../../common.styled';\r\nimport css from './LoginView.module.css';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(getUserIsLoggedIn);\r\n  const isError = useSelector(getAuthError);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const emailInputId = uuidv4();\r\n  const passwordInputId = uuidv4();\r\n  const paramState = { 'email': setEmail, 'password': setPassword }\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    return paramState[name](value)\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if ( !isError && (email.trim() === '' || password.trim() === '')) {\r\n      return toast.error('ðŸ’© Please fill in all fields!');\r\n    }\r\n    \r\n    dispatch(logIn({ email, password }));\r\n    if (isError) {\r\n      toast.error('Wrong login or password!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={css.form} onSubmit={handleSubmit}>\r\n      <Label htmlFor={emailInputId}>\r\n        Email\r\n        <div className={css.thumb_input}>\r\n          <FormIcon>\r\n            <MdOutlineAlternateEmail size={16} />\r\n          </FormIcon>\r\n          <Input\r\n            id={emailInputId}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\r\n            required\r\n            onChange={handleChange}\r\n            value={email}\r\n          />\r\n        </div>\r\n      </Label>\r\n\r\n      <Label htmlFor={passwordInputId}>\r\n        Password\r\n        <div className={css.thumb_input}>\r\n          <FormIcon>\r\n            <RiLockPasswordFill size={16} />\r\n          </FormIcon>\r\n          <Input\r\n            id={passwordInputId}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            required\r\n            onChange={handleChange}\r\n            value={password}\r\n          />\r\n        </div>\r\n      </Label>\r\n      <Button textShadowColor={'var(--color-white)'} margin={'10px 0'}\r\n        type=\"submit\"\r\n        disabled={isLoading}>\r\n          <ClipLoader loading={isLoading} size={12} color={'white'}/> {`Log In`}\r\n      </Button>\r\n    </form>\r\n  );\r\n}"],"sourceRoot":""}