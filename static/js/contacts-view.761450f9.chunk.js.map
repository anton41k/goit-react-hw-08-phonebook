{"version":3,"sources":["common.styled.js","components/Form/Form.module.css","components/Modal/Modal.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","views/ContactsView/ContactsView.module.css","components/Form/Form.jsx","components/Modal/Modal.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","views/ContactsView/ContactsView.js"],"names":["styleTextShadow","textShadow","NavLinkStyled","styled","NavLink","props","fontSize","s","m","p","d","Button","button","margin","textShadowColor","Input","input","Label","label","FormIcon","module","exports","Form","closeModal","contacts","useSelector","getFiltredContactsList","dispatch","useDispatch","isLoading","getLoadingStatus","nameInputId","uuidv4","numberInputId","className","css","form","onSubmit","ev","preventDefault","currentTarget","elements","name","number","newContact","value","find","contact","toast","error","reset","console","log","setAddNameContact","addContact","success","message","htmlFor","thumb_input","size","id","type","pattern","title","required","disabled","loading","color","modalRoot","document","querySelector","Modal","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","event","code","createPortal","overlay","onClick","target","modal_content","btn_close_modal","Contact","addNameContact","contact_item_add","contact_item_h","contact_item","tumb_contact_data","tumb_field","icon_contact","contact_name","item_data","contact_number","deleteContact","handleOnDeleteBtn","ContactList","getAddNameContact","fetchContacts","LoaderComponent","length","icon_add_left","icon_add_center","icon_add_user","contact_list","map","ContactsView","useState","toggle","setToggle","handleToggleOnClick","title_phonebook"],"mappings":"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","file":"static/js/contacts-view.761450f9.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const styleTextShadow = {\r\ntextShadow: '1px 1px 0 var(--accent-color-orange), 1px -1px 0 var(--accent-color-orange), -1px 1px 0 var(--accent-color-orange),-1px -1px 0 var(--accent-color-orange)'}\r\nexport const NavLinkStyled = styled(NavLink)`\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    padding: 2px;\r\n    font-weight: 700;\r\n    font-size: ${props => `${props.fontSize.s}px`};\r\n    text-shadow: 1px 1px 0 var(--color-gray), 1px -1px 0 var(--color-gray), -1px 1px 0 var(--color-gray),\r\n  -1px -1px 0 var(--color-gray);\r\n    color: var(--accent-color-black07);\r\n    transition: all var(--animation-duration);\r\n    &:hover,\r\n    &:focus {\r\n        text-shadow: 1px 1px 0 var(--color-white), 1px -1px 0 var(--color-white),\r\n  -1px 1px 0 var(--color-white), -1px -1px 0 var(--color-white);\r\n    }\r\n    @media (min-width: 420px) {\r\n        & {\r\n            font-size: ${props => `${props.fontSize.m}px`};\r\n            padding: 4px;\r\n        }\r\n    }\r\n    @media (min-width: 768px) {\r\n        & {\r\n            font-size: ${props => `${props.fontSize.p}px`};\r\n            padding: 9px;\r\n        }\r\n    }\r\n    @media (min-width: 1200px) {\r\n        & {\r\n            font-size: ${props => `${props.fontSize.d}px`};\r\n            padding: 12px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    box-sizing: border-box;\r\n    -webkit-appearance: none;\r\n        -moz-appearance: none;\r\n            appearance: none;\r\n    background-color: transparent;\r\n    border: 2px solid var(--accent-color-orange);\r\n    border-radius: 0.6em;\r\n    text-shadow:\r\n        1px 1px 0 var(--color-gray08),\r\n        1px -1px 0 var(--color-gray08),\r\n        -1px 1px 0 var(--color-gray08),\r\n        -1px -1px 0 var(--color-gray08);\r\n    border-color: var(--accent-color-orange);\r\n    box-shadow:\r\n        0 0 40px 40px var(--accent-color-orange) inset,\r\n        0 0 0 0 var(--accent-color-orange);\r\n    -webkit-transition: all var(--animation-duration) ease-in-out;\r\n    transition: all var(--animation-duration) var(--timing-function);\r\n    cursor: pointer;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-align-self: center;\r\n        -ms-flex-item-align: center;\r\n            align-self: center;\r\n    font-size: 15px;\r\n    margin:${props => props?.margin};\r\n    line-height: 1;\r\n    padding: 5px 12px;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    \r\n    &:hover,\r\n    &:focus {\r\n        outline: 0;\r\n        box-shadow: 0 0 10px 0 var(--accent-color-orange) inset, 0 0 10px 4px var(--accent-color-orange);\r\n        text-shadow: 1px 1px 0 ${props => props.textShadowColor}, 1px -1px 0 ${props => props.textShadowColor},\r\n  -1px 1px 0 ${props => props.textShadowColor}, -1px -1px 0 ${props => props.textShadowColor};\r\n    }\r\n    @media screen and (max-width: 785px){\r\n    padding: 2px 6px;\r\n    font-size: 12px;\r\n}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    margin: 10px 0;\r\n    padding: 4px 10px;\r\n    width: 100%;\r\n    height: 28px;\r\n    border-top-right-radius: 3px;\r\n    border-bottom-right-radius: 3px;\r\n    border: 1px solid var(--color-input-border);\r\n    border-left: none;\r\n    background-color: var(--color-gray);\r\n    &:hover,\r\n    &:focus{\r\n        background-color: var(--color-gray08);\r\n    }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: var(--color-gray);\r\n    font-weight: 700;\r\n    &:hover,\r\n    &:focus{\r\n        text-shadow: var(--text-shadow);\r\n        color: var(--accent-color-black07);\r\n    }\r\n`;\r\n\r\nexport const FormIcon = styled.label`\r\n    padding: 0;\r\n    border-top-left-radius: 3px;\r\n    border-bottom-left-radius: 3px;\r\n    background-color: var(--color-input-border);\r\n    width: 30px;\r\n    height: 28px;\r\n    color: var(--accent-color-orange);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    &:hover,\r\n    &:focus{\r\n        background-color: var(--accent-color-orange);\r\n        color: var(--accent-color-black07);\r\n    }\r\n`;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2ppX6\",\"thumb_input\":\"Form_thumb_input__3loVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__xcxlt\",\"modal_content\":\"Modal_modal_content__3oHAm\",\"btn_close_modal\":\"Modal_btn_close_modal__1RvUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_item\":\"Contact_contact_item__35qSz\",\"contact_item_h\":\"Contact_contact_item_h__1TFHg\",\"contact_item_add\":\"Contact_contact_item_add__3p7DB\",\"tumb_field\":\"Contact_tumb_field__3CCqW\",\"tumb_contact_data\":\"Contact_tumb_contact_data__1UDXY\",\"item_data\":\"Contact_item_data__2ahp7\",\"icon_contact\":\"Contact_icon_contact__1wgDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__27ckE\",\"icon_add_user\":\"ContactList_icon_add_user__3eIu1\",\"icon_add_center\":\"ContactList_icon_add_center__9dkiO\",\"icon_add_left\":\"ContactList_icon_add_left__tqWaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsView_container__1gprR\",\"title_phonebook\":\"ContactsView_title_phonebook__5FM78\"};","import { useDispatch, useSelector } from 'react-redux';\nimport  toast  from 'react-hot-toast';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FaUser, FaPhoneAlt } from 'react-icons/fa';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport { addContact, getFiltredContactsList, getLoadingStatus, getAddNameContact } from '../../redux/contacts';\nimport { Button, Input, Label, FormIcon } from '../../common.styled';\nimport { setAddNameContact } from '../../redux/contacts/slices';\nimport css from \"./Form.module.css\";\n\n\nfunction Form({ closeModal }) {\n  const contacts = useSelector(getFiltredContactsList);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getLoadingStatus);\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const { name, number } = ev.currentTarget.elements;\n    const newContact = {name: name.value, number: number.value}\n\n    const found = contacts.find((contact) => contact.name === name.value);\n    if (found) {\n      toast.error(`${name.value} is already in contacts`);\n      ev.currentTarget.reset();\n      return\n    }\n    console.log(name.value);\n    dispatch(setAddNameContact(name.value))\n    \n    try {\n      dispatch(addContact(newContact));\n      toast.success(`Contact ${newContact.name} created`);\n      ev.currentTarget.reset();\n      closeModal()\n    }\n    catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <Label htmlFor={nameInputId}>\n        Name\n        <div className={css.thumb_input}>\n          <FormIcon>\n            <FaUser size={16} />\n          </FormIcon>\n          <Input\n            id={nameInputId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </div>\n      </Label>\n\n      <Label htmlFor={numberInputId}>\n        Number\n        <div className={css.thumb_input}>\n          <FormIcon>\n            <FaPhoneAlt size={16} />\n          </FormIcon>\n          <Input\n            id={numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"The phone number must be numbers and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </div>\n      </Label>\n      <Button textShadowColor={'var(--color-white)'} margin={'10px 0'}\n        type=\"submit\"\n        disabled={isLoading}>\n          <ClipLoader loading={isLoading} size={12} color={'white'}/> {` Add contact`}\n      </Button>\n    </form>\n  );\n}\n\nexport default Form;\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { CgClose } from 'react-icons/cg';\r\nimport css from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nfunction Modal({ closeModal, children }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const handleOnOverlayClick = event => {\r\n    if (event.target === event.currentTarget) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={css.overlay} onClick={handleOnOverlayClick}>\r\n      <div className={css.modal_content}>\r\n        <button  className={css.btn_close_modal} type=\"button\" onClick={() => closeModal()}>\r\n          <CgClose />\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\n\r\nexport default Modal;","import toast from 'react-hot-toast';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FaUserTie } from 'react-icons/fa';\r\nimport { IoIosCall } from 'react-icons/io';\r\n\r\nimport { deleteContact } from '../../redux/contacts';\r\nimport { Button } from '../../common.styled'\r\nimport css from \"./Contact.module.css\";\r\n\r\n\r\nconst Contact = ({ id, name, number, addNameContact }) => {\r\n  const dispatch = useDispatch();\r\n  const handleOnDeleteBtn = (id, name) => {\r\n    dispatch(deleteContact(id));\r\n    toast.success(`Contact ${name} deleted`);\r\n  };\r\n  \r\n  return (\r\n    <li className={`${addNameContact === name ? `${css.contact_item_add}` : `${css.contact_item_h}`} ${css.contact_item}`}>        \r\n      <div className={css.tumb_contact_data}>\r\n        <div className={css.tumb_field}>\r\n          <FaUserTie size={18} className={ css.icon_contact}/>\r\n          <div className={`${css.contact_name} ${css.item_data}`}>{name}</div>\r\n        </div>\r\n        <div className={css.tumb_field}>\r\n          <IoIosCall size={18} className={ css.icon_contact}/>\r\n          <div className={`${css.contact_number} ${css.item_data}`}>{number}</div>\r\n        </div>\r\n      </div>\r\n      <Button\r\n        textShadowColor={'var(--color-pink)'}\r\n        onClick={() => handleOnDeleteBtn(id, name)}>\r\n                Delete\r\n      </Button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { FaUserPlus } from 'react-icons/fa';\r\n\r\nimport {\r\n  fetchContacts,\r\n  getFiltredContactsList,\r\n  getLoadingStatus,\r\n  getAddNameContact\r\n} from '../../redux/contacts';\r\nimport Contact from \"../Contact/Contact\";\r\nimport css from \"./ContactList.module.css\";\r\nimport LoaderComponent from '../LoaderComponent/LoaderComponent';\r\n\r\nconst ContactList = ({closeModal}) => {\r\n  const isLoading = useSelector(getLoadingStatus);\r\n  const contacts = useSelector(getFiltredContactsList);\r\n  const addNameContact = useSelector(getAddNameContact);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>{isLoading && <LoaderComponent />}\r\n      {!isLoading &&\r\n        <div className={`${contacts.length ? css.icon_add_left : css.icon_add_center} ${css.icon_add_user}`} onClick={closeModal}>\r\n          <FaUserPlus size={22} />\r\n        </div>\r\n      }\r\n      <ul className={css.contact_list}>\r\n        \r\n        {contacts?.map((contact) => (\r\n          \r\n          <Contact\r\n            key={contact.id}\r\n            {...contact}\r\n            addNameContact={addNameContact}\r\n          />\r\n            \r\n        ))}\r\n      </ul>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ContactList;","import { Toaster } from \"react-hot-toast\";\r\nimport { useState } from 'react';\r\n\r\nimport Form from \"../../components/Form/Form\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport ContactList from \"../../components/ContactList/ContactList\";\r\nimport css from './ContactsView.module.css'\r\n\r\nexport default function ContactsView() {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const handleToggleOnClick = () => setToggle(!toggle);\r\n  \r\n  return (\r\n    <div >\r\n      {toggle && (\r\n        < Modal closeModal={handleToggleOnClick}>\r\n          <h1 className={css.title_phonebook}>Phonebook</h1>\r\n          <Form closeModal={handleToggleOnClick} />\r\n        </Modal>)\r\n      }\r\n\r\n      \r\n      <ContactList closeModal={handleToggleOnClick} />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}